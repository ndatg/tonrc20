;; decrease_allowance
[int, tuple, cell, tuple, int] decrease_allowance_data() method_id(40) {
  int function_selector = 0;
  cell data = new_data();

  slice owner = address(-1, 0x1111111111111111111111111111111111111111111111111111111111111111);
  slice spender = address(-1, 0x2222222222222222222222222222222222222222222222222222222222222222);
  slice contract = address(-1, 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA);
  int amount = 2000000000; ;; 2 MTKN

  int msg_value = 1000000000;
  cell in_msg_cell = build_message(0, owner, contract, msg_value, begin_cell());
  slice in_msg = begin_cell()
    .store_uint(op::decrease_allowance(), 32) ;; op
    .store_uint(now(), 64) ;; query_id
    .store_slice(spender) ;; to
    .store_uint(amount, 256) ;; amount
    .end_cell()
    .begin_parse();

  tuple stack = unsafe_tuple([(msg_value, in_msg_cell, in_msg)]);

  return [function_selector, stack, data, get_c7(), null()];
}

_ decrease_allowance(int exit_code, cell data, tuple stack, cell actions, int gas) method_id(41) {
  throw_if(error::exit_code_not_success(), exit_code != 0);
}

;; spender allowance after decrease_allowance
[int, tuple, cell, tuple, int] spender_allowance_after_decrease_allowance_data() method_id(42) {
  int function_selector = 82759;
  cell data = get_prev_c4();

  slice owner = address(-1, 0x1111111111111111111111111111111111111111111111111111111111111111);
  slice spender = address(-1, 0x2222222222222222222222222222222222222222222222222222222222222222);

  tuple stack = unsafe_tuple([(owner, spender)]);

  return [function_selector, stack, data, get_c7(), null()];
}

_ spender_allowance_after_decrease_allowance(int exit_code, cell data, tuple stack, cell actions, int gas) method_id(43) {
  throw_if(error::exit_code_not_success(), exit_code != 0);
  int allowance = first(stack);
  throw_if(error::allowance_not_equal(), allowance != 18000000000);
}

;; sets the allowance to zero when all allowance is removed
[int, tuple, cell, tuple, int] decrease_allowance_to_zero_data() method_id(44) {
  int function_selector = 0;
  cell data = new_data();

  slice owner = address(-1, 0x1111111111111111111111111111111111111111111111111111111111111111);
  slice spender = address(-1, 0x2222222222222222222222222222222222222222222222222222222222222222);
  slice contract = address(-1, 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA);
  int amount = 20000000000; ;; 20 MTKN

  int msg_value = 1000000000;
  cell in_msg_cell = build_message(0, owner, contract, msg_value, begin_cell());
  slice in_msg = begin_cell()
    .store_uint(op::decrease_allowance(), 32) ;; op
    .store_uint(now(), 64) ;; query_id
    .store_slice(spender) ;; to
    .store_uint(amount, 256) ;; amount
    .end_cell()
    .begin_parse();

  tuple stack = unsafe_tuple([(msg_value, in_msg_cell, in_msg)]);

  return [function_selector, stack, data, get_c7(), null()];
}

_ decrease_allowance_to_zero(int exit_code, cell data, tuple stack, cell actions, int gas) method_id(45) {
  throw_if(error::exit_code_not_success(), exit_code != 0);
}

;; spender allowance after decrease_allowance to zero
[int, tuple, cell, tuple, int] spender_allowance_after_decrease_allowance_to_zero_data() method_id(46) {
  int function_selector = 82759;
  cell data = get_prev_c4();

  slice owner = address(-1, 0x1111111111111111111111111111111111111111111111111111111111111111);
  slice spender = address(-1, 0x2222222222222222222222222222222222222222222222222222222222222222);

  tuple stack = unsafe_tuple([(owner, spender)]);

  return [function_selector, stack, data, get_c7(), null()];
}

_ spender_allowance_after_decrease_allowance_to_zero(int exit_code, cell data, tuple stack, cell actions, int gas) method_id(47) {
  throw_if(error::exit_code_not_success(), exit_code != 0);
  int allowance = first(stack);
  throw_if(error::allowance_not_equal(), allowance != 0);
}

;; reverts when more than the full allowance is removed
[int, tuple, cell, tuple, int] decrease_allowance_below_zero_data() method_id(48) {
  int function_selector = 0;
  cell data = new_data();

  slice owner = address(-1, 0x1111111111111111111111111111111111111111111111111111111111111111);
  slice spender = address(-1, 0x2222222222222222222222222222222222222222222222222222222222222222);
  slice contract = address(-1, 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA);
  int amount = 25000000000; ;; 25 MTKN

  int msg_value = 1000000000;
  cell in_msg_cell = build_message(0, owner, contract, msg_value, begin_cell());
  slice in_msg = begin_cell()
    .store_uint(op::decrease_allowance(), 32) ;; op
    .store_uint(now(), 64) ;; query_id
    .store_slice(spender) ;; to
    .store_uint(amount, 256) ;; amount
    .end_cell()
    .begin_parse();

  tuple stack = unsafe_tuple([(msg_value, in_msg_cell, in_msg)]);

  return [function_selector, stack, data, get_c7(), null()];
}

_ decrease_allowance_below_zero(int exit_code, cell data, tuple stack, cell actions, int gas) method_id(49) {
  throw_if(error::exit_code_not_success(), exit_code != exception::decreased_allowance_below_zero());
}
